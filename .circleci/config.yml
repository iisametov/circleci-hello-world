version: 2.1

aliases:
  - &step_process_dotenv
      run:
        name: Process .env file variables
        command: echo "export $(grep -v '^#' .env | xargs)" >> $BASH_ENV

orbs:
  slack: circleci/slack@3.4.2
  
jobs:
  build:
    docker:
      - image: cimg/openjdk:11.0.8-browsers

    environment:
      JVM_OPTS: -Xmx3200m
      
    steps:
        - checkout
        - run:
            name: install latest chrome
            command: |
             sudo apt-get update
              sudo apt-get install libxml2-utils
            
        - run:
            name: Build slack message
            command: |
             pwd
             echo "TOTAL_TESTS=$(xmllint  --xpath "string(//div[@id='tests']/div)" index.html)" >> $BASH_ENV
             echo "FAILED_TESTS=$(xmllint  --xpath "string(//div[@id='failures']/div)" index.html)" >> $BASH_ENV
            when: always

      ##############################
        - run:
            name: "Sxxxxbles"
            command: echo "RREPORTING=$TOTAL_TESTS+$FAILED_TESTS" >> $BASH_ENV
        - run:
            name: "Setup custom environment variables"
            command: echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV

        - run:
            name: "What was my custom environment variable?"
            command: echo ${MY_ENV_VAR}
        - run:
            name: "Print total"
            command: echo ${TOTAL_TESTS}
        - run:
            name: "Print failed"
            command: echo $FAILED_TESTS
        - run:
            name: "Print reporting"
            command: echo $RREPORTING
        - run:
            name: Assert that from command overrides values from .env and other values
            command: |
                echo "VERIF=$(xmllint  --xpath "string(//div[@id='tests']/div)" index.html)" >> .env
                echo "FFAILED_TESTS=$(xmllint  --xpath "string(//div[@id='failures']/div)" index.html)" >> $BASH_ENV
                export VAR3=value_from_command
                echo "VAR1: $VAR1"
                echo "VAR2: $VAR2"
                echo "VAR3: $VAR3"
               # echo "VERIF: $VERIF"

        - run: echo "VAR2=value2_from_env_updated" >> .env
        
        - run: echo "VARR=$(xmllint  --xpath "string(//div[@id='tests']/div)" index.html)" >> .env
        - *step_process_dotenv
        - run:
            name: Assert that loading values from .env overrides old values and does not overide command values.
            command: |
                export VAR3=value_from_command
                echo "VAR1: $VAR1"
                echo "VAR2: $VAR2"
                echo "VAR3: $VAR3"
                echo "VARR: $VARR"
                echo "VERIF: $VERIF"
                echo "FFAILED_TESTS: $FFAILED_TESTS"



        - slack/notify:
            color: '#ffa500'
            message: for branch *$CIRCLE_BRANCH*\n*Total - $TOTAL_TESTS $tests, Failed - $FAILED_TESTS ${failed}* $MY_ENV_VAR
            webhook: $SLACK_WEBHOOK
